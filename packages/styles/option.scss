@use 'sass:map';

@use './shared' as *;
@use './design' as *;

$option: () !default;
$option: map.merge(
  (
    color: get-css-var('content-color-base'),
    // color-hover: get-css-var('option-color'),
    color-hitting: get-css-var('color-primary-base'),
    color-selected: get-css-var('color-primary-base'),
    color-disabled: get-css-var('fill-color-disabled'),
    bg-color: transparent,
    bg-color-hover: get-css-var('fill-color-humble'),
    bg-color-hitting: get-css-var('option-bg-color-hover'),
    bg-color-selected: get-css-var('color-primary-opacity-8'),
    bg-color-disabled: get-css-var('option-bg-color'),
    d-color: get-css-var('border-color-light-2'),
    divider: get-css-var('border-shape') get-css-var('option-d-color'),
    group-color: get-css-var('content-color-secondary'),
    group-font-size: get-css-var('font-size-secondary'),
    label-v-padding: 8px,
    label-h-padding: 8px,
    min-height: 32px
  ),
  $option
);

.#{$namespace}-option {
  &-vars {
    @include define-preset-values('option', $option);
  }

  $label-v-padding: get-css-var('option-label-v-padding');
  $label-h-padding: get-css-var('option-label-h-padding');
  $label-padding: $label-v-padding $label-h-padding;

  display: inline-flex;
  align-items: center;
  width: 100%;
  min-height: get-css-var('option-min-height');
  padding: $label-padding;
  color: get-css-var('option-color');
  white-space: nowrap;
  list-style: none;
  cursor: pointer;
  background-color: get-css-var('option-bg-color');
  transition: get-css-var('transition-color'), get-css-var('transition-background');
  border-radius: get-css-var(radius-base);

  &:hover {
    background-color: get-css-var(color-primary-bg);
  }

  &__icon + &__label {
    position: absolute;
  }
  &__label {
    display: flex;
    line-height: 1;
    padding-left: 24px;
  }
}
