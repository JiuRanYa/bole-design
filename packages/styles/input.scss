@use 'sass:map';

@use './shared' as *;
@use './design' as *;

$input: () !default;
$input: map.merge(
  (
    b-color: get-css-var(border-color-base),
    b-color-hover: get-css-var(color-primary-base),
    bg-color: get-css-var(fill-color-humble),
    radius: get-css-var(radius-base),
    line-height: get-css-var(line-height-base),
		height: 36px,
    shadow: 0 0 0 4px get-css-var(shadow-color-light-1)
  ),
  $input
);
.#{$namespace}-input {
  &-vars {
    @include define-preset-values('input', $input);
  }
  display: inline-flex;
  border: get-css-var(border-shape) get-css-var(input-b-color);
  margin: 0;
  padding: 0;
  font-size: get-css-var(font-size-base);
  border-radius: get-css-var(input-radius);
  transition: get-css-var(transition-color),get-css-var('transition-border');
  padding: 8px 10px;
	height: get-css-var('input-height');
	box-sizing: border-box;

  &:hover {
    background-color: get-css-var(fill-color-base);
  }
	&:focus{
		box-shadow: 2px 2px 6px rgba(0,0,0, 0.05);
    border: get-css-var(border-shape) get-css-var(input-b-color-hover);
	}
	&:focus-within {
		box-shadow: 2px 2px 6px rgba(0,0,0, 0.05);
    border: get-css-var(border-shape) get-css-var(input-b-color-hover);
	}

  &--wrapper {
		display: inline-flex;
		align-items: center;
	}
  &--control {
    border: none;
    background-color: transparent;
    outline: none;
    width: 100%;
    height: 100%;
    min-width: 0;
    font-size: inherit;
    color: inherit;
		padding: 0;
    line-height: get-css-var(input-line-height);
  }
	&__icon {
		display: flex;
		align-items: center;
	}
	&__prefix {
		margin-inline-end: 4px;
	}
	&__before {
		display: inline-block;
		margin-inline-end: 12px;
	}
	&__after {
		display: inline-block;
		margin-inline-start: 12px;
	}
  input::placeholder {
    color: get-css-var(content-color-placeholder);
  }
}
